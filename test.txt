Last login: Thu Mar 10 21:06:40 on ttys000
chenweideMacBook-Air:~ Metatrons$ git status
fatal: Not a git repository (or any of the parent directories): .git
chenweideMacBook-Air:~ Metatrons$ cd desktop/學習/專案學習/Github/101213010
chenweideMacBook-Air:101213010 Metatrons$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   test

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   test

chenweideMacBook-Air:101213010 Metatrons$ git add test
chenweideMacBook-Air:101213010 Metatrons$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   test

chenweideMacBook-Air:101213010 Metatrons$ git push
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Everything up-to-date
chenweideMacBook-Air:101213010 Metatrons$ git push test
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: Invalid gitfile format: test
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
chenweideMacBook-Air:101213010 Metatrons$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   test

chenweideMacBook-Air:101213010 Metatrons$ git push
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Everything up-to-date
chenweideMacBook-Air:101213010 Metatrons$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   test

chenweideMacBook-Air:101213010 Metatrons$ git add test
chenweideMacBook-Air:101213010 Metatrons$ git add test.txt
fatal: pathspec 'test.txt' did not match any files
chenweideMacBook-Air:101213010 Metatrons$ git add test.txt
chenweideMacBook-Air:101213010 Metatrons$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   test
	new file:   test.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	deleted:    test

chenweideMacBook-Air:101213010 Metatrons$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   test
	new file:   test.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	deleted:    test

chenweideMacBook-Air:101213010 Metatrons$ git add test.txt
chenweideMacBook-Air:101213010 Metatrons$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   test
	new file:   test.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	deleted:    test

chenweideMacBook-Air:101213010 Metatrons$ git reset
chenweideMacBook-Air:101213010 Metatrons$ git reset Head
chenweideMacBook-Air:101213010 Metatrons$ git reset Head test.txt
chenweideMacBook-Air:101213010 Metatrons$ git commit
On branch master
Your branch is up-to-date with 'origin/master'.
Untracked files:
	test.txt

nothing added to commit but untracked files present
chenweideMacBook-Air:101213010 Metatrons$ git add test.txt
chenweideMacBook-Air:101213010 Metatrons$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   test.txt

chenweideMacBook-Air:101213010 Metatrons$ git commit

This is the fucking test!!!
# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Committer: metatronsss <Metatrons@chenweideMacBook-Air.local>
#            
# On branch master
# Your branch is up-to-date with 'origin/master'.
#
# Changes to be committed:
#       new file:   test.txt
#   
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
-- INSERT --
